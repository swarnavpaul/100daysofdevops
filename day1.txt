Last login: Fri Jan  6 09:59:06 on ttys000

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
swarnavs-MacBook-Air:~ swarnavpaul$ vagrant
Usage: vagrant [options] <command> [<args>]

    -h, --help                       Print this help.

Common commands:
     autocomplete    manages autocomplete installation on host
     box             manages boxes: installation, removal, etc.
     cloud           manages everything related to Vagrant Cloud
     destroy         stops and deletes all traces of the vagrant machine
     global-status   outputs status Vagrant environments for this user
     halt            stops the vagrant machine
     help            shows the help for a subcommand
     init            initializes a new Vagrant environment by creating a Vagrantfile
     login           
     package         packages a running vagrant environment into a box
     plugin          manages plugins: install, uninstall, update, etc.
     port            displays information about guest port mappings
     powershell      connects to machine via powershell remoting
     provision       provisions the vagrant machine
     push            deploys code in this environment to a configured destination
     rdp             connects to machine via RDP
     reload          restarts vagrant machine, loads new Vagrantfile configuration
     resume          resume a suspended vagrant machine
     serve           start Vagrant server
     snapshot        manages snapshots: saving, restoring, etc.
     ssh             connects to machine via SSH
     ssh-config      outputs OpenSSH valid configuration to connect to the machine
     status          outputs status of the vagrant machine
     suspend         suspends the machine
     up              starts and provisions the vagrant environment
     upload          upload to machine via communicator
     validate        validates the Vagrantfile
     version         prints current and latest Vagrant version
     winrm           executes commands on a machine via WinRM
     winrm-config    outputs WinRM configuration to connect to the machine

For help on any individual command run `vagrant COMMAND -h`

Additional subcommands are available, but are either more advanced
or not commonly used. To see all subcommands, run the command
`vagrant list-commands`.
        --[no-]color                 Enable or disable color output
        --machine-readable           Enable machine readable output
    -v, --version                    Display Vagrant version
        --debug                      Enable debug output
        --timestamp                  Enable timestamps on log output
        --debug-timestamp            Enable debug output with timestamps
        --no-tty                     Enable non-interactive output

swarnavs-MacBook-Air:~ swarnavpaul$ https://gitlab.com/roybhaskar9/devops/raw/master/Lab/LaptopLab/Windows/version10/labfolders.sh
-bash: https://gitlab.com/roybhaskar9/devops/raw/master/Lab/LaptopLab/Windows/version10/labfolders.sh: No such file or directory
swarnavs-MacBook-Air:~ swarnavpaul$ curl -sSL https://gitlab.com/roybhaskar9/devops/raw/master/Lab/LaptopLab/Windows/version10/labfolders.sh | bash
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'centos/7' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'centos/7'
    default: URL: https://vagrantcloud.com/centos/7
==> default: Adding box 'centos/7' (v2004.01) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/centos/boxes/7/versions/2004.01/providers/virtualbox.box
Download redirected to host: cloud.centos.org
    default: Calculating and comparing box checksum...
==> default: Successfully added box 'centos/7' (v2004.01) for 'virtualbox'!
==> default: Importing base box 'centos/7'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'centos/7' version '2004.01' is up to date...
==> default: Setting the name of the VM: centos_default_1672982893594_86530
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: No guest additions were detected on the base box for this VM! Guest
    default: additions are required for forwarded ports, shared folders, host only
    default: networking, and more. If SSH fails on this machine, please install
    default: the guest additions and repackage the box to continue.
    default: 
    default: This is not an error message; everything may continue to work properly,
    default: in which case you may ignore this message.
==> default: Rsyncing folder: /Users/swarnavpaul/devops/provision/vagrant/centos/ => /vagrant
==> default: Attempting graceful shutdown of VM...
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'ubuntu/xenial64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'ubuntu/xenial64'
    default: URL: https://vagrantcloud.com/ubuntu/xenial64
==> default: Adding box 'ubuntu/xenial64' (v20211001.0.0) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/ubuntu/boxes/xenial64/versions/20211001.0.0/providers/virtualbox.box
Download redirected to host: cloud-images.ubuntu.com
==> default: Successfully added box 'ubuntu/xenial64' (v20211001.0.0) for 'virtualbox'!
==> default: Importing base box 'ubuntu/xenial64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'ubuntu/xenial64' version '20211001.0.0' is up to date...
==> default: Setting the name of the VM: ubuntu_default_1672983017027_18048
Vagrant is currently configured to create VirtualBox synced folders with
the `SharedFoldersEnableSymlinksCreate` option enabled. If the Vagrant
guest is not trusted, you may want to disable this option. For more
information on this option, please refer to the VirtualBox manual:

  https://www.virtualbox.org/manual/ch04.html#sharedfolders

This option can be disabled globally with an environment variable:

  VAGRANT_DISABLE_VBOXSYMLINKCREATE=1

or on a per folder basis within the Vagrantfile:

  config.vm.synced_folder '/host/path', '/guest/path', SharedFoldersEnableSymlinksCreate: false
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 5.1.38
    default: VirtualBox Version: 7.0
==> default: Mounting shared folders...
    default: /vagrant => /Users/swarnavpaul/devops/provision/vagrant/ubuntu
==> default: Attempting graceful shutdown of VM...
Lab Setup Complete
swarnavs-MacBook-Air:~ swarnavpaul$ tree /Users/swarnavpaul/devops
-bash: tree: command not found
swarnavs-MacBook-Air:~ swarnavpaul$ cd /Users/swarnavpaul/devops
swarnavs-MacBook-Air:devops swarnavpaul$ ls
coding		provision	release
swarnavs-MacBook-Air:devops swarnavpaul$ brew
Example usage:
  brew search TEXT|/REGEX/
  brew info [FORMULA|CASK...]
  brew install FORMULA|CASK...
  brew update
  brew upgrade [FORMULA|CASK...]
  brew uninstall FORMULA|CASK...
  brew list [FORMULA|CASK...]

Troubleshooting:
  brew config
  brew doctor
  brew install --verbose --debug FORMULA|CASK

Contributing:
  brew create URL [--no-fetch]
  brew edit [FORMULA|CASK...]

Further help:
  brew commands
  brew help [COMMAND]
  man brew
  https://docs.brew.sh
swarnavs-MacBook-Air:devops swarnavpaul$ brew install tree
Running `brew update --preinstall`...
==> Homebrew is run entirely by unpaid volunteers. Please consider donating:
  https://github.com/Homebrew/brew#donations

==> Auto-updated Homebrew!
Updated 1 tap (homebrew/core).
==> New Formulae
adamstark-audiofile                      lunar-date
agg                                      mabel
akku                                     maclaunch
ansible@6                                macpine
antidote                                 mailsy
apophenia                                manifest-tool
aribb24                                  mariadb@10.7
astro                                    mariadb@10.8
autocorrect                              mariadb@10.9
aws-nuke                                 markdown-toc
aws2-wrap                                markdownlint-cli2
aztfy                                    marksman
bazarr                                   mcap
bdftopcf                                 meek
berkeley-db@5                            mesheryctl
bfgminer                                 metalang99
bindgen                                  metals
bore-cli                                 metview
bossa                                    mimirtool
brpc                                     mkp224o
btrfs-progs                              mle
buf                                      mpfrcx
burst                                    mprocs
busted                                   mqttui
c                                        muon
c2rust                                   mxnet
camlp-streams                            mycorrhiza
cargo-about                              mypaint-brushes
cargo-bundle                             naga-cli
cargo-crev                               nali
cargo-deny                               naml
cargo-depgraph                           nap
cargo-nextest                            nb
cargo-udeps                              nemu
cargo-zigbuild                           neovide
cbindgen                                 netcdf-cxx
cdsclient                                netcdf-fortran
censys                                   nftables
cfonts                                   nmrpflash
chain-bench                              node@18
circumflex                               nuraft
clitest                                  oak
cloudflare-wrangler2                     oauth2c
cloudprober                              objconv
clusterawsadm                            ocl-icd
cmctl                                    octosql
cntb                                     ohdear-cli
cocogitto                                onlykey-agent
code-cli                                 open62541
cog                                      opencl-headers
commitlint                               opencl-icd-loader
conda-zsh-completion                     opentelemetry-cpp
corrosion                                openvi
countdown                                osv-scanner
cpp-httplib                              ouch
cpuid                                    pacmc
cql-proxy                                page
create-api                               pandemics
crytic-compile                           pax
curlcpp                                  pbzx
cxgo                                     pdf-diff
czg                                      pferd
d2                                       pg_cron
dart-sdk                                 pg_partman
datatype99                               pget
dbml-cli                                 pgsync
distrobox                                php@8.1
docker-buildx                            phrase-cli
doggo                                    pinocchio
dooit                                    pint
dotdrop                                  pipe-rename
dotnet@6                                 pixie
dronedb                                  pixiewps
dsda-doom                                pkcs11-tools
dtrx                                     pluto
dufs                                     poac
dump1090-mutability                      pocl
dumpling                                 podman-compose
dunamai                                  pomsky
dura                                     popeye
dynein                                   portablegl
echidna                                  postgresql@15
edencommon                               protobuf@3
editorconfig-checker                     protolint
eget                                     prowler
emqx                                     proxsuite
enex2notion                              prql-compiler
enpass-cli                               prr
envd                                     psysh
erigon                                   purescript-language-server
erlang@24                                pymol
evernote-backup                          pymupdf
evtx                                     python-build
fastfetch                                python-gdbm@3.11
fastnetmon                               python-lsp-server
felinks                                  python-tk@3.11
fend                                     python-typing-extensions
ferium                                   python@3.11
fgbio                                    pyyaml
flix                                     qbe
flock                                    qsv
fonts-encodings                          quilt-installer
fortls                                   railway
fred                                     rdb
fuego-firestore                          redis@6.2
gator                                    release-it
gaze                                     req
gcc@11                                   retdec
gcem                                     ripsecrets
gdrive-downloader                        rnr
gebug                                    rome
gf                                       ruby@3.1
ghc@8.10                                 ruff
ghc@9.2                                  rush-parallel
ghorg                                    sambamba
git-codereview                           sapling
git-delete-merged-branches               scala@2.13
git-machete                              schemathesis
git-sync                                 sdl2_sound
git-workspace                            secp256k1
glibc@2.13                               seven-kingdoms
glider                                   sftpgo
gnustep-base                             sgn
go-camo                                  sgr
go-task                                  shaderc
go@1.18                                  skaffold@1.39
gobackup                                 skeema
goctl                                    slither-analyzer
gokart                                   smap
got                                      snakefmt
grammarly-languageserver                 snapcast
grantlee                                 sniffnet
graphqxl                                 snowball
groestlcoin                              snowflake
gum                                      socket_vmnet
has                                      solc-select
hatch                                    souffle
helix                                    spectral-cli
helmify                                  speedbump
hermit                                   spr
highway                                  sql-language-server
hof                                      sqlcmd
hotbuild                                 standard
hpp-fcl                                  steampipe
httm                                     stencil
huggingface-cli                          stepci
hwatch                                   stuffbin
hysteria                                 stylelint
hyx                                      svt-av1
ibazel                                   swiftdraw
iir1                                     swtpm
ijq                                      syft
install-peerdeps                         synergy-core
interface99                              syslog-ng
iptables                                 taplo
jackett                                  tart
jaq                                      tbls
jbang                                    tea
jj                                       teller
joker                                    temporal
jreleaser                                tere
jscpd                                    terramate
json2tsv                                 textract
jupp                                     tfel
kalign                                   tinysearch
keploy                                   tlsx
kics                                     toml-test
kt-connect                               totp-cli
kubefirst                                toxcore
kubesess                                 tproxy
kubevious                                tradcpp
kustomizer                               treefmt
leapp-cli                                tremor-runtime
lemmeknow                                trezor-bridge
levant                                   trzsz-go
lexicon                                  ttdl
lgeneral                                 ttmath
libabw                                   tuc
libbpf                                   tuntox
libdivide                                tut
libeatmydata                             txt2man
libemf2svg                               typewritten
libff                                    typos-cli
libfyaml                                 unisonlang
libgrapheme                              unxip
libisofs                                 uthash
liblbfgs                                 valijson
libnetfilter_conntrack                   vectorscan
libnftnl                                 verapdf
libnl                                    verovio
libobjc2                                 vhs
libplacebo                               video-compare
libretls                                 vile
libunibreak                              vineyard
liburing                                 vulkan-loader
libvatek                                 wasm-micro-runtime
libxcvt                                  waybackpy
license-eye                              weasyprint
licensed                                 webkitgtk
licenseplist                             wikibase-cli
licensor                                 x86_64-linux-gnu-binutils
linux-headers@5.15                       xcode-kotlin
livekit                                  xcodes
livekit-cli                              xctesthtmlreport
llama                                    xdg-ninja
llvm@13                                  xpipe
llvm@14                                  xq
lmfit                                    xwin
lndir                                    yorkie
luacheck                                 zf
lucky-commit                             zx

You have 6 outdated formulae installed.
You can upgrade them with brew upgrade
or list them with brew outdated.

==> Fetching tree
==> Downloading https://ghcr.io/v2/homebrew/core/tree/manifests/2.1.0
######################################################################## 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/tree/blobs/sha256:870fa02168b69
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sh
######################################################################## 100.0%
==> Pouring tree--2.1.0.monterey.bottle.tar.gz
🍺  /usr/local/Cellar/tree/2.1.0: 8 files, 158.4KB
==> Running `brew cleanup tree`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
==> `brew cleanup` has not been run in the last 30 days, running now...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/ca-certificates--2022-04-26... (121.8KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/gdbm--1.23... (270.6KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/mpdecimal--2.5.1... (545.2KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/openssl@1.1--1.1.1o... (5.2MB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/python@3.9--3.9.12... (14.3MB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/readline--8.1.2... (534.7KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/sqlite--3.38.5... (2MB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/xz--5.2.5... (415.3KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/gdbm_bottle_manifest--1.23... (6.1KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/xz_bottle_manifest--5.2.5... (7.4KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/python@3.9_bottle_manifest--3.9.12... (18.1KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/ca-certificates_bottle_manifest--2022-04-26... (1.8KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/sqlite_bottle_manifest--3.38.5... (6.9KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/mpdecimal_bottle_manifest--2.5.1... (6.9KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/openssl@1.1_bottle_manifest--1.1.1o... (7.6KB)
Removing: /Users/swarnavpaul/Library/Caches/Homebrew/readline_bottle_manifest--8.1.2... (6.6KB)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/gdbm... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/mpdecimal... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/readline... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/sqlite... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/xz... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/ca-certificates... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/openssl@1.1... (64B)
Removing: /Users/swarnavpaul/Library/Logs/Homebrew/python@3.9... (2 files, 2.4KB)
Pruned 0 symbolic links and 2 directories from /usr/local
swarnavs-MacBook-Air:devops swarnavpaul$ tree /Users/swarnavpaul/devops
/Users/swarnavpaul/devops
├── coding
│   ├── ansible
│   ├── chef
│   │   ├── chefnode
│   │   ├── chefserver
│   │   └── chefworkstation
│   ├── puppet
│   │   ├── puppetnode
│   │   └── puppetserver
│   └── terraform
├── provision
│   ├── docker
│   ├── kubernetes
│   └── vagrant
│       ├── centos
│       │   └── Vagrantfile
│       └── ubuntu
│           ├── Vagrantfile
│           └── ubuntu-xenial-16.04-cloudimg-console.log
└── release
    ├── git
    ├── gitlab
    ├── jenkins
    ├── nagios
    └── tomcat

23 directories, 3 files
swarnavs-MacBook-Air:devops swarnavpaul$ cd /Users/swarnavpaul/devops
swarnavs-MacBook-Air:devops swarnavpaul$ la
-bash: la: command not found
swarnavs-MacBook-Air:devops swarnavpaul$ ls
coding		provision	release
swarnavs-MacBook-Air:devops swarnavpaul$ cd provision/
swarnavs-MacBook-Air:provision swarnavpaul$ ls
docker		kubernetes	vagrant
swarnavs-MacBook-Air:provision swarnavpaul$ cd vagrant/
swarnavs-MacBook-Air:vagrant swarnavpaul$ ls
centos	ubuntu
swarnavs-MacBook-Air:vagrant swarnavpaul$ cd ubuntu
swarnavs-MacBook-Air:ubuntu swarnavpaul$ ls
Vagrantfile					ubuntu-xenial-16.04-cloudimg-console.log
swarnavs-MacBook-Air:ubuntu swarnavpaul$ code Vagrantfile 
-bash: code: command not found
swarnavs-MacBook-Air:ubuntu swarnavpaul$ brew install bash
==> Fetching bash
==> Downloading https://ghcr.io/v2/homebrew/core/bash/manifests/5.2.15
######################################################################## 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/bash/blobs/sha256:05a5f9435c9e9ffe8377b03e0ca6b27bbb32cc01aff47dd1692cd8d7e735ab3a
==> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:05a5f9435c9e9ffe8377b03e0ca6b27bbb32cc01aff47dd1692cd8d7e735ab3a?se=2023-01-06T05%3A45%3A00Z&sig=Wk0ApSJ8HQGXOzQTTM8VtC
######################################################################## 100.0%
==> Pouring bash--5.2.15.monterey.bottle.tar.gz
🍺  /usr/local/Cellar/bash/5.2.15: 162 files, 11.7MB
==> Running `brew cleanup bash`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
swarnavs-MacBook-Air:ubuntu swarnavpaul$ cd /Users/swarnavpaul/devops
swarnavs-MacBook-Air:devops swarnavpaul$ ls
coding		provision	release
swarnavs-MacBook-Air:devops swarnavpaul$ bash
bash-5.2$ 
bash-5.2$ 
bash-5.2$ sudo su -
Password:
swarnavs-MacBook-Air:~ root# ls
.CFUserTextEncoding	.forward		Library
swarnavs-MacBook-Air:~ root# cd /
swarnavs-MacBook-Air:/ root# ls
.VolumeIcon.icns	Applications		Users			cores			home			sbin			var
.file			Library			Volumes			dev			opt			tmp
.vol			System			bin			etc			private			usr
swarnavs-MacBook-Air:/ root# cd ~
swarnavs-MacBook-Air:~ root# cd ~/devops
-sh: cd: /var/root/devops: No such file or directory
swarnavs-MacBook-Air:~ root# curl -sSL https://gitlab.com/roybhaskar9/devops/raw/master/Lab/LaptopLab/Windows/version10/labfolders.sh | bash
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'centos/7' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'centos/7'
    default: URL: https://vagrantcloud.com/centos/7
==> default: Adding box 'centos/7' (v2004.01) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/centos/boxes/7/versions/2004.01/providers/virtualbox.box
Download redirected to host: cloud.centos.org
    default: Calculating and comparing box checksum...
==> default: Successfully added box 'centos/7' (v2004.01) for 'virtualbox'!
==> default: Importing base box 'centos/7'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'centos/7' version '2004.01' is up to date...
==> default: Setting the name of the VM: centos_default_1672984286575_46153
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: No guest additions were detected on the base box for this VM! Guest
    default: additions are required for forwarded ports, shared folders, host only
    default: networking, and more. If SSH fails on this machine, please install
    default: the guest additions and repackage the box to continue.
    default: 
    default: This is not an error message; everything may continue to work properly,
    default: in which case you may ignore this message.
==> default: Rsyncing folder: /private/var/root/devops/provision/vagrant/centos/ => /vagrant
==> default: Attempting graceful shutdown of VM...
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'ubuntu/xenial64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'ubuntu/xenial64'
    default: URL: https://vagrantcloud.com/ubuntu/xenial64
==> default: Adding box 'ubuntu/xenial64' (v20211001.0.0) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/ubuntu/boxes/xenial64/versions/20211001.0.0/providers/virtualbox.box
Download redirected to host: cloud-images.ubuntu.com
==> default: Successfully added box 'ubuntu/xenial64' (v20211001.0.0) for 'virtualbox'!
==> default: Importing base box 'ubuntu/xenial64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'ubuntu/xenial64' version '20211001.0.0' is up to date...
==> default: Setting the name of the VM: ubuntu_default_1672984409636_40881
Vagrant is currently configured to create VirtualBox synced folders with
the `SharedFoldersEnableSymlinksCreate` option enabled. If the Vagrant
guest is not trusted, you may want to disable this option. For more
information on this option, please refer to the VirtualBox manual:

  https://www.virtualbox.org/manual/ch04.html#sharedfolders

This option can be disabled globally with an environment variable:

  VAGRANT_DISABLE_VBOXSYMLINKCREATE=1

or on a per folder basis within the Vagrantfile:

  config.vm.synced_folder '/host/path', '/guest/path', SharedFoldersEnableSymlinksCreate: false
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 5.1.38
    default: VirtualBox Version: 7.0
==> default: Mounting shared folders...
    default: /vagrant => /private/var/root/devops/provision/vagrant/ubuntu
==> default: Attempting graceful shutdown of VM...
Lab Setup Complete
swarnavs-MacBook-Air:~ root# pwd
/var/root
swarnavs-MacBook-Air:~ root# cd ~
swarnavs-MacBook-Air:~ root# ls
.CFUserTextEncoding	.vagrant.d		VirtualBox VMs
.forward		Library			devops
swarnavs-MacBook-Air:~ root# cd devops/provision/vagrant/bionic
-sh: cd: devops/provision/vagrant/bionic: No such file or directory
swarnavs-MacBook-Air:~ root# cd devops/provision/vagrant/ubuntu
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
Vagrantfile
swarnavs-MacBook-Air:ubuntu root# code Vagrantfile 
-sh: code: command not found
swarnavs-MacBook-Air:ubuntu root# brew install --cask visual-studio-code
Error: Running Homebrew as root is extremely dangerous and no longer supported.
As Homebrew does not drop privileges on installation you would be giving all
build scripts full access to your system.
swarnavs-MacBook-Air:ubuntu root# exit
logout
bash-5.2$ brew install --cask visual-studio-code
Running `brew update --auto-update`...
==> Auto-updated Homebrew!
Updated 1 tap (homebrew/core).

You have 6 outdated formulae installed.
You can upgrade them with brew upgrade
or list them with brew outdated.

==> Tapping homebrew/cask
Cloning into '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask'...
remote: Enumerating objects: 700539, done.
remote: Counting objects: 100% (288/288), done.
remote: Compressing objects: 100% (192/192), done.
remote: Total 700539 (delta 152), reused 229 (delta 96), pack-reused 700251
Receiving objects: 100% (700539/700539), 331.13 MiB | 7.40 MiB/s, done.
Resolving deltas: 100% (497913/497913), done.
Updating files: 100% (4200/4200), done.
Tapped 4139 casks (4,211 files, 353.4MB).
==> Downloading https://update.code.visualstudio.com/1.74.2/darwin/stable
==> Downloading from https://az764295.vo.msecnd.net/stable/e8a3071ea4344d9d48ef8a4df2c097372b0c5161/VSCode-da
######################################################################## 100.0%
==> Installing Cask visual-studio-code
==> Moving App 'Visual Studio Code.app' to '/Applications/Visual Studio Code.app'
==> Linking Binary 'code' to '/usr/local/bin/code'
🍺  visual-studio-code was successfully installed!
bash-5.2$ pwd
/Users/swarnavpaul/devops
bash-5.2$ ls
coding		provision	release
bash-5.2$ cd provision/
bash-5.2$ ls
docker		kubernetes	vagrant
bash-5.2$ cd vagrant
bash-5.2$ ls
centos	ubuntu
bash-5.2$ cd ubuntu
bash-5.2$ ls
Vagrantfile					ubuntu-xenial-16.04-cloudimg-console.log
bash-5.2$ code Vagrantfile 
bash-5.2$ vagrant list box
Usage: vagrant [options] <command> [<args>]

    -h, --help                       Print this help.

Common commands:
     autocomplete    manages autocomplete installation on host
     box             manages boxes: installation, removal, etc.
     cloud           manages everything related to Vagrant Cloud
     destroy         stops and deletes all traces of the vagrant machine
     global-status   outputs status Vagrant environments for this user
     halt            stops the vagrant machine
     help            shows the help for a subcommand
     init            initializes a new Vagrant environment by creating a Vagrantfile
     login           
     package         packages a running vagrant environment into a box
     plugin          manages plugins: install, uninstall, update, etc.
     port            displays information about guest port mappings
     powershell      connects to machine via powershell remoting
     provision       provisions the vagrant machine
     push            deploys code in this environment to a configured destination
     rdp             connects to machine via RDP
     reload          restarts vagrant machine, loads new Vagrantfile configuration
     resume          resume a suspended vagrant machine
     serve           start Vagrant server
     snapshot        manages snapshots: saving, restoring, etc.
     ssh             connects to machine via SSH
     ssh-config      outputs OpenSSH valid configuration to connect to the machine
     status          outputs status of the vagrant machine
     suspend         suspends the machine
     up              starts and provisions the vagrant environment
     upload          upload to machine via communicator
     validate        validates the Vagrantfile
     version         prints current and latest Vagrant version
     winrm           executes commands on a machine via WinRM
     winrm-config    outputs WinRM configuration to connect to the machine

For help on any individual command run `vagrant COMMAND -h`

Additional subcommands are available, but are either more advanced
or not commonly used. To see all subcommands, run the command
`vagrant list-commands`.
        --[no-]color                 Enable or disable color output
        --machine-readable           Enable machine readable output
    -v, --version                    Display Vagrant version
        --debug                      Enable debug output
        --timestamp                  Enable timestamps on log output
        --debug-timestamp            Enable debug output with timestamps
        --no-tty                     Enable non-interactive output

bash-5.2$ vagrant list boxex
Usage: vagrant [options] <command> [<args>]

    -h, --help                       Print this help.

Common commands:
     autocomplete    manages autocomplete installation on host
     box             manages boxes: installation, removal, etc.
     cloud           manages everything related to Vagrant Cloud
     destroy         stops and deletes all traces of the vagrant machine
     global-status   outputs status Vagrant environments for this user
     halt            stops the vagrant machine
     help            shows the help for a subcommand
     init            initializes a new Vagrant environment by creating a Vagrantfile
     login           
     package         packages a running vagrant environment into a box
     plugin          manages plugins: install, uninstall, update, etc.
     port            displays information about guest port mappings
     powershell      connects to machine via powershell remoting
     provision       provisions the vagrant machine
     push            deploys code in this environment to a configured destination
     rdp             connects to machine via RDP
     reload          restarts vagrant machine, loads new Vagrantfile configuration
     resume          resume a suspended vagrant machine
     serve           start Vagrant server
     snapshot        manages snapshots: saving, restoring, etc.
     ssh             connects to machine via SSH
     ssh-config      outputs OpenSSH valid configuration to connect to the machine
     status          outputs status of the vagrant machine
     suspend         suspends the machine
     up              starts and provisions the vagrant environment
     upload          upload to machine via communicator
     validate        validates the Vagrantfile
     version         prints current and latest Vagrant version
     winrm           executes commands on a machine via WinRM
     winrm-config    outputs WinRM configuration to connect to the machine

For help on any individual command run `vagrant COMMAND -h`

Additional subcommands are available, but are either more advanced
or not commonly used. To see all subcommands, run the command
`vagrant list-commands`.
        --[no-]color                 Enable or disable color output
        --machine-readable           Enable machine readable output
    -v, --version                    Display Vagrant version
        --debug                      Enable debug output
        --timestamp                  Enable timestamps on log output
        --debug-timestamp            Enable debug output with timestamps
        --no-tty                     Enable non-interactive output

bash-5.2$ sudo su -
Password:
Sorry, try again.
Password:
Sorry, try again.
Password:
swarnavs-MacBook-Air:~ root# cd ~/devops/provision/vagrant/ubuntu
swarnavs-MacBook-Air:ubuntu root# pwd
/var/root/devops/provision/vagrant/ubuntu
swarnavs-MacBook-Air:ubuntu root# vagrant box add generic/ubuntu
The box 'generic/ubuntu' could not be found or
could not be accessed in the remote catalog. If this is a private
box on HashiCorp's Vagrant Cloud, please verify you're logged in via
`vagrant login`. Also, please double-check the name. The expanded
URL and error message are shown below:

URL: ["https://vagrantcloud.com/generic/ubuntu"]
Error: The requested URL returned error: 404
swarnavs-MacBook-Air:ubuntu root# vagrant box add generic/ubuntu1804
==> box: Loading metadata for box 'generic/ubuntu1804'
    box: URL: https://vagrantcloud.com/generic/ubuntu1804
This box can work with multiple providers! The providers that it
can work with are listed below. Please review the list and choose
the provider you will be working with.

1) hyperv
2) libvirt
3) parallels
4) virtualbox
5) vmware_desktop

Enter your choice: 4
==> box: Adding box 'generic/ubuntu1804' (v4.2.8) for provider: virtualbox
    box: Downloading: https://vagrantcloud.com/generic/boxes/ubuntu1804/versions/4.2.8/providers/virtualbox.box
Progress: 7% (Rate: 5526k/s, Estimated time remaining: 0:04:33)^R
    box: Calculating and comparing box checksum...
==> box: Successfully added box 'generic/ubuntu1804' (v4.2.8) for 'virtualbox'!
swarnavs-MacBook-Air:ubuntu root# =vagrant box list
-sh: =vagrant: command not found
swarnavs-MacBook-Air:ubuntu root# vagrant box list
centos/7           (virtualbox, 2004.01)
generic/ubuntu1804 (virtualbox, 4.2.8)
ubuntu/xenial64    (virtualbox, 20211001.0.0)
swarnavs-MacBook-Air:ubuntu root# ls          
.vagrant					Vagrantfile					ubuntu-xenial-16.04-cloudimg-console.log
swarnavs-MacBook-Air:ubuntu root# rm Vagrantfile 
swarnavs-MacBook-Air:ubuntu root# vagrant init generic/ubuntu1804 --force
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					Vagrantfile					ubuntu-xenial-16.04-cloudimg-console.log
swarnavs-MacBook-Air:ubuntu root# code Vagrantfile 
swarnavs-MacBook-Air:ubuntu root# code Vagrantfile 
swarnavs-MacBook-Air:ubuntu root# code Vagrantfile 
swarnavs-MacBook-Air:ubuntu root# cat Vagrantfile 
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu1804"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
swarnavs-MacBook-Air:ubuntu root# code Vagrantfile
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'ubuntu/xenial64' version '20211001.0.0' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 5.1.38
    default: VirtualBox Version: 7.0
==> default: Mounting shared folders...
    default: /vagrant => /private/var/root/devops/provision/vagrant/ubuntu
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.
swarnavs-MacBook-Air:ubuntu root# vagrant ssh
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-210-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

UA Infra: Extended Security Maintenance (ESM) is not enabled.

0 updates can be applied immediately.

45 additional security updates can be applied with UA Infra: ESM
Learn more about enabling UA Infra: ESM service for Ubuntu 16.04 at
https://ubuntu.com/16-04

New release '18.04.6 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


vagrant@ubuntu-xenial:~$ sudo su -
root@ubuntu-xenial:~# cat /etc/*release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=16.04
DISTRIB_CODENAME=xenial
DISTRIB_DESCRIPTION="Ubuntu 16.04.7 LTS"
NAME="Ubuntu"
VERSION="16.04.7 LTS (Xenial Xerus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 16.04.7 LTS"
VERSION_ID="16.04"
HOME_URL="http://www.ubuntu.com/"
SUPPORT_URL="http://help.ubuntu.com/"
BUG_REPORT_URL="http://bugs.launchpad.net/ubuntu/"
VERSION_CODENAME=xenial
UBUNTU_CODENAME=xenial
root@ubuntu-xenial:~# exit
logout
vagrant@ubuntu-xenial:~$ exit
logout
Connection to 127.0.0.1 closed.
swarnavs-MacBook-Air:ubuntu root# vagrant destroy -f
==> default: Forcing shutdown of VM...
==> default: Destroying VM and associated drives...
swarnavs-MacBook-Air:ubuntu root# vagrant statys
Usage: vagrant [options] <command> [<args>]

    -h, --help                       Print this help.

Common commands:
     autocomplete    manages autocomplete installation on host
     box             manages boxes: installation, removal, etc.
     cloud           manages everything related to Vagrant Cloud
     destroy         stops and deletes all traces of the vagrant machine
     global-status   outputs status Vagrant environments for this user
     halt            stops the vagrant machine
     help            shows the help for a subcommand
     init            initializes a new Vagrant environment by creating a Vagrantfile
     login           
     package         packages a running vagrant environment into a box
     plugin          manages plugins: install, uninstall, update, etc.
     port            displays information about guest port mappings
     powershell      connects to machine via powershell remoting
     provision       provisions the vagrant machine
     push            deploys code in this environment to a configured destination
     rdp             connects to machine via RDP
     reload          restarts vagrant machine, loads new Vagrantfile configuration
     resume          resume a suspended vagrant machine
     serve           start Vagrant server
     snapshot        manages snapshots: saving, restoring, etc.
     ssh             connects to machine via SSH
     ssh-config      outputs OpenSSH valid configuration to connect to the machine
     status          outputs status of the vagrant machine
     suspend         suspends the machine
     up              starts and provisions the vagrant environment
     upload          upload to machine via communicator
     validate        validates the Vagrantfile
     version         prints current and latest Vagrant version
     winrm           executes commands on a machine via WinRM
     winrm-config    outputs WinRM configuration to connect to the machine

For help on any individual command run `vagrant COMMAND -h`

Additional subcommands are available, but are either more advanced
or not commonly used. To see all subcommands, run the command
`vagrant list-commands`.
        --[no-]color                 Enable or disable color output
        --machine-readable           Enable machine readable output
    -v, --version                    Display Vagrant version
        --debug                      Enable debug output
        --timestamp                  Enable timestamps on log output
        --debug-timestamp            Enable debug output with timestamps
        --no-tty                     Enable non-interactive output

swarnavs-MacBook-Air:ubuntu root# vagrant status
Current machine states:

default                   not created (virtualbox)

The environment has not yet been created. Run `vagrant up` to
create the environment. If a machine is not created, only the
default provider will be shown. So if a provider is not listed,
then the machine is not created for that environment.
swarnavs-MacBook-Air:ubuntu root# vagrant box list
centos/7           (virtualbox, 2004.01)
generic/ubuntu1804 (virtualbox, 4.2.8)
ubuntu/xenial64    (virtualbox, 20211001.0.0)
swarnavs-MacBook-Air:ubuntu root# vagrant box --help
Usage: vagrant box <subcommand> [<args>]

Available subcommands:
     add
     list
     outdated
     prune
     remove
     repackage
     update

For help on any individual subcommand run `vagrant box <subcommand> -h`
        --[no-]color                 Enable or disable color output
        --machine-readable           Enable machine readable output
    -v, --version                    Display Vagrant version
        --debug                      Enable debug output
        --timestamp                  Enable timestamps on log output
        --debug-timestamp            Enable debug output with timestamps
        --no-tty                     Enable non-interactive output

swarnavs-MacBook-Air:ubuntu root# vagrant box remove ubuntu/xenial64
Removing box 'ubuntu/xenial64' (v20211001.0.0) with provider 'virtualbox'...
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# vagrant box list
centos/7           (virtualbox, 2004.01)
generic/ubuntu1804 (virtualbox, 4.2.8)
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# ls          
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
Vagrantfile
swarnavs-MacBook-Air:ubuntu root# rm -f Vagrantfile 
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
swarnavs-MacBook-Air:ubuntu root# vagrant init generic/ubuntu --force
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
Vagrantfile
swarnavs-MacBook-Air:ubuntu root# cat Vagrantfile 
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
swarnavs-MacBook-Air:ubuntu root# 
swarnavs-MacBook-Air:ubuntu root# vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'generic/ubuntu' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
The box 'generic/ubuntu' could not be found or
could not be accessed in the remote catalog. If this is a private
box on HashiCorp's Vagrant Cloud, please verify you're logged in via
`vagrant login`. Also, please double-check the name. The expanded
URL and error message are shown below:

URL: ["https://vagrantcloud.com/generic/ubuntu"]
Error: The requested URL returned error: 404
swarnavs-MacBook-Air:ubuntu root# rm -f Vagrantfile 
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
swarnavs-MacBook-Air:ubuntu root# vagrant init generic/ubuntu1804 --force
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
Vagrantfile
swarnavs-MacBook-Air:ubuntu root# cat Vagrantfile 
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu1804"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
swarnavs-MacBook-Air:ubuntu root# ls
.vagrant					ubuntu-xenial-16.04-cloudimg-console.log
Vagrantfile
swarnavs-MacBook-Air:ubuntu root# vagrant status
Current machine states:

default                   not created (virtualbox)

The environment has not yet been created. Run `vagrant up` to
create the environment. If a machine is not created, only the
default provider will be shown. So if a provider is not listed,
then the machine is not created for that environment.
swarnavs-MacBook-Air:ubuntu root# vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'generic/ubuntu1804'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'generic/ubuntu1804' version '4.2.8' is up to date...
==> default: Setting the name of the VM: ubuntu_default_1672988843112_98852
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 5.2.42
    default: VirtualBox Version: 7.0
swarnavs-MacBook-Air:ubuntu root# vagrant ssh
vagrant@ubuntu1804:~$ sudo su -
root@ubuntu1804:~# cat /etc/*release
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=18.04
DISTRIB_CODENAME=bionic
DISTRIB_DESCRIPTION="Ubuntu 18.04.6 LTS"
NAME="Ubuntu"
VERSION="18.04.6 LTS (Bionic Beaver)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 18.04.6 LTS"
VERSION_ID="18.04"
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
VERSION_CODENAME=bionic
UBUNTU_CODENAME=bionic
root@ubuntu1804:~# curl -fsSL https://test.docker.com -o test-docker.sh
root@ubuntu1804:~# sh test-docker.sh
# Executing docker install script, commit: 4f282167c425347a931ccfd95cc91fab041d414f
+ sh -c apt-get update -qq >/dev/null

+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sh -c mkdir -p /etc/apt/keyrings && chmod -R 0755 /etc/apt/keyrings
+ sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
+ sh -c chmod a+r /etc/apt/keyrings/docker.gpg
+ sh -c echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu bionic test" > /etc/apt/sources.list.d/docker.list
+ sh -c apt-get update -qq >/dev/null
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-scan-plugin docker-buildx-plugin >/dev/null
+ version_gte 20.10
+ [ -z  ]
+ return 0
+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce-rootless-extras >/dev/null
+ sh -c docker version
Client: Docker Engine - Community
 Version:           23.0.0-rc.1
 API version:       1.42
 Go version:        go1.19.4
 Git commit:        139e924
 Built:             Thu Dec 22 23:36:50 2022
 OS/Arch:           linux/amd64
 Context:           default

Server: Docker Engine - Community
 Engine:
  Version:          23.0.0-rc.1
  API version:      1.42 (minimum version 1.12)
  Go version:       go1.19.4
  Git commit:       cba986b
  Built:            Thu Dec 22 23:36:50 2022
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.14
  GitCommit:        9ba4b250366a5ddde94bb7c9d1def331423aa323
 runc:
  Version:          1.1.4
  GitCommit:        v1.1.4-0-g5fd4c4d
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0

================================================================================

To run Docker as a non-privileged user, consider setting up the
Docker daemon in rootless mode for your user:

    dockerd-rootless-setuptool.sh install

Visit https://docs.docker.com/go/rootless/ to learn about rootless mode.


To run the Docker daemon as a fully privileged service, but granting non-root
users access, refer to https://docs.docker.com/go/daemon-access/

WARNING: Access to the remote API on a privileged Docker daemon is equivalent
         to root access on the host. Refer to the 'Docker daemon attack surface'
         documentation for details: https://docs.docker.com/go/attack-surface/

================================================================================

root@ubuntu1804:~# 
root@ubuntu1804:~# 
root@ubuntu1804:~# exit
logout
vagrant@ubuntu1804:~$ exit
logout
Connection to 127.0.0.1 closed.
swarnavs-MacBook-Air:ubuntu root# vagrant halt
==> default: Attempting graceful shutdown of VM...
swarnavs-MacBook-Air:ubuntu root# vagrant status
Current machine states:

default                   poweroff (virtualbox)

The VM is powered off. To restart the VM, simply run `vagrant up`
swarnavs-MacBook-Air:ubuntu root# 
